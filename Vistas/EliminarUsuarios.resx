<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_cerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>